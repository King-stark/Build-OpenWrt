name: Build on self-hosted

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: kminin.config
  DIY_P1_SH: diy-kenzok1.sh
  DIY_P2_SH: diy-kenzok2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  SERVERCHAN_PUSH: true
  TZ: Asia/Shanghai
  PRODUCT_NAME: lede-kenzo-mini

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /opt/*
        df -Th

    - name: Clone source code
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "DATE1=$(date "+%m/%d %Y")" >> $GITHUB_ENV

    - name: Telegram notification
      if: env.SERVERCHAN_PUSH == 'true'
      run: |
        MSG="
        🔔 您正在使用 托管的甲骨文 编译固件中,请耐心等待...... ⏳
        编译时间：${{ env.DATE }}
        编译信息：${{ env.PRODUCT_NAME }}
        " 
        curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=${MSG}" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

#    - name: Install feeds
#      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        cd ..
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8 || make download -j1 V=s 
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(($(nproc)+1)) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Package Armvirt as OpenWrt
      uses: unifreq/openwrt_packit@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        PACKAGE_SOC: s905d
        WHOAMI: king-stark
        KERNEL_VERSION_NAME: 5.15.53_5.18.10
        KERNEL_AUTO_LATEST: true
        #OPENWRT_VER: R21.7.26
        #ENABLE_WIFI_K504: 1
        #ENABLE_WIFI_K510: 0

    - name: Upload firmware to release
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.DATE1 }} ${{ env.PRODUCT_NAME }}
        allowUpdates: true
        tag: ${{ env.PRODUCT_NAME }}
        commit: main
        token: ${{ secrets.TOKEN }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        body: |
          - This is OpenWrt mini-firmware for Armvirt 64
          - ***Firmware information***
          - Default IP: 192.168.31.2
          - Default username: root
          - Default password: password
          - 当前使用版本:【截止编译前[➦lede源码](https://github.com/coolsnowwolf/lede) ➦[kenzok8的常用openwrt软件包](https://github.com/kenzok8/openwrt-packages.git) 最后一次更新】
          ${{ env.useVersionInfo }}

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 7
        keep_minimum_runs: 7

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}

    - name: Telegram notification
      if: steps.organize.outputs.status == 'success' && env.SERVERCHAN_PUSH == 'true'
      run: |
        MSG="
        亲爱的✨主人✨：
        ${{ env.PRODUCT_NAME }} 编译并打包完成
        编译时间：${{ env.DATE }}
        🔗下载链接：https://github.com/King-stark/Build-OpenWrt/releases/download/lede-kenzo-mini
        OpenWrt 更新信息：${{ env.useVersionInfo }}
        "
        curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&text=${MSG}"
