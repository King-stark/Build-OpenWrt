#========================================================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description: Use Releases file to packaging
# Cron: min (0 - 59) / hour (0 - 23) / day of month (1 - 31) / month (1 - 12) / day of week (0 - 6)(Sunday - Saturday)
#========================================================================================================================


name: Use Releases file to Packaging

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection'
        required: false
        default: 'false'
#  schedule:
#    - cron: '30 22 * * *'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/kenzo-config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: false
  UPLOAD_WENSHUSHU: false
  UPLOAD_WETRANSFER: true
  RECENT_LASTEST: 30
  TZ: Asia/Shanghai
  PRODUCT_NAME: N1-openWRT

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://is.gd/depends_ubuntu_2204)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "DATE1=$(date "+%m/%d %Y")" >> $GITHUB_ENV

    - name: Package Armvirt as OpenWrt
      if: (!cancelled())
      uses: ophub/flippy-openwrt-actions@main
      env:
        OPENWRT_ARMVIRT: https://download.wetransfer.com/usgv/268568cb31a09ee62a7456ef6a9e0b5320220712131509/3437f9c500de188b2b7e6c88a719811981eb77ad/openwrt-armvirt-64-default-rootfs.tar.gz?token=eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2NTc2MzE3NzIsImV4cCI6MTY1NzYzMjM3MiwidW5pcXVlIjoiMjY4NTY4Y2IzMWEwOWVlNjJhNzQ1NmVmNmE5ZTBiNTMyMDIyMDcxMjEzMTUwOSIsImZpbGVuYW1lIjoib3BlbndydC1hcm12aXJ0LTY0LWRlZmF1bHQtcm9vdGZzLnRhci5neiIsIndheWJpbGxfdXJsIjoiaHR0cDovL3N0b3JtLWludGVybmFsLnNlcnZpY2UudXMtZWFzdC0xLndldHJhbnNmZXIubmV0L2FwaS93YXliaWxscz9zaWduZWRfd2F5YmlsbF9pZD1leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFITkxkMk5pYUZkWGJpSXNJbVY0Y0NJNklqSXdNakl0TURjdE1USlVNVFE2TWpZNk1USXVNREF3V2lJc0luQjFjaUk2SW5kaGVXSnBiR3hmYVdRaWZYMC0tOTQ3NzFlODE0MDE0YTkwNjAyMDFjYjA0NjY4ZWFlNDZlZjViZWQ0MzY5Njc0MzMxZDRmMTBiMDZmNzY5ZGIxNSIsImZpbmdlcnByaW50IjoiMzQzN2Y5YzUwMGRlMTg4YjJiN2U2Yzg4YTcxOTgxMTk4MWViNzdhZCIsImNhbGxiYWNrIjoie1wiZm9ybWRhdGFcIjp7XCJhY3Rpb25cIjpcImh0dHA6Ly9mcm9udGVuZC5zZXJ2aWNlLmV1LXdlc3QtMS53ZXRyYW5zZmVyLm5ldC93ZWJob29rcy9iYWNrZW5kXCJ9LFwiZm9ybVwiOntcInRyYW5zZmVyX2lkXCI6XCIyNjg1NjhjYjMxYTA5ZWU2MmE3NDU2ZWY2YTllMGI1MzIwMjIwNzEyMTMxNTA5XCIsXCJkb3dubG9hZF9pZFwiOjE1ODMyNDUxNTkyfX0ifQ.GKWdI6xKvgTC6SmIk_huH02H2h48oahbK3IUSNOdSCg&cf=y
        PACKAGE_SOC: s905d
        WHOAMI: king-stark
        #KERNEL_REPO_URL: https://github.com/breakings/OpenWrt/tree/main/opt/kernel
        KERNEL_VERSION_NAME: 5.15.34_5.18.3
        #OPENWRT_VER: R21.12.1
        KERNEL_AUTO_LATEST: true
        #GZIP_IMGS: .gz

    - name: SSH connection to Actions @ Ctrl+C to enter, Ctrl+D to exit
      uses: P3TERX/ssh2actions@main
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Upload firmware to Wenshushu
      id: wenshushu
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_WENSHUSHU == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wss -s -p 16 --no-progress ${PACKAGED_OUTPUTPATH} 2>&1 | tee Wenshushu.log
        echo "::warning file=Wenshushu.cn::$(cat Wenshushu.log | grep https)"
        echo "::set-output name=url::$(cat Wenshushu.log | grep https | cut -f3 -d" ")"

    - name: Upload firmware to WeTransfer
      id: wetransfer
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${PACKAGED_OUTPUTPATH} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"

    - name: Upload artifact to Actions
      uses: kittaakos/upload-artifact-as-is@master
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        path: ${{ env.PACKAGED_OUTPUTPATH }}/

    - name: Generate release tag
      id: tag
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        touch release.txt
        [ $UPLOAD_WENSHUSHU = true ] && echo "🔗 [Wenshushu](${{ steps.wenshushu.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "🔗 [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        cat >> release.txt <<EOF
        - 使用lede源码和kenzok8的常用软件包合集自动编译而成的高大全。
        - 默认IP：192.168.31.2 默认密码：password (WiFi密码同）
        - 常见问题及注意事项请参考恩山F大➦[最新帖](https://www.right.com.cn/forum/thread-4076037-1-1.html)
        - 当前使用版本:【编译前的最后一次➦[主源码](https://github.com/coolsnowwolf/lede)更新记录】
        ${{ env.useVersionInfo }}
        EOF
        echo "::set-output name=status::success"

    - name: Upload OpenWrt Firmware to Release
      id: release
      uses: ncipollo/release-action@v1
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        name: ${{ env.DATE1 }} ${{ env.PRODUCT_NAME }}
        allowUpdates: true
        removeArtifacts: true
        tag: ${{ env.PRODUCT_NAME }}
        commit: main
        token: ${{ secrets.TOKEN }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        bodyFile: release.txt

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        token: ${{ secrets.TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 30
        keep_minimum_runs: 6

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 8
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}

    - name: Telegram notification
      run: |
        MSG="
        🔔 亲爱的✨主人✨：
        ${{ env.PRODUCT_NAME }} 打包完成
        打包时间：${{ env.DATE }}
        下载链接：
        🔗 [Github]：https://github.com/King-stark/Build-OpenWrt/releases/tag/N1-openWRT
        🔗 [Wenshushu]：${{ steps.Wenshushu.outputs.url }}
        🔗 [WeTransfer]：${{ steps.wetransfer.outputs.url }}
        OpenWrt 更新信息：${{ env.useVersionInfo }}
        "
        curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&text=${MSG}"
